/* slightly modified sample from epix samples gallery */
#include "epix.h"
using namespace ePiX;

double gxf, gyf, gxt, gyt;
double a = -0.4;

double gr;

P
f(double x, double y)
{
	Complex z(x,y);
	Complex ii(0,1);
	//Complex oneplusi(1,1);
	Complex g;
	
	//g = (oneplusi/sqrt(2))*sqrtC(-(z-1)/(z+1));
	//return -(g-ii)/(g+ii);
	
	g = -ii*(z-1)/(z+1);
	return -(g*g-ii)/(g*g+ii)+2.6;
}

P
fl(double t)
{
  return f(gxf + t*(gxt-gxf),gyf + t*(gyt-gyf));
}

P
fc(double t)
{
  return f(gr*cos(M_PI*t),gr*sin(M_PI*t));
}

void
draw_line(double xf, double yf, double xt, double yt, int steps)
{
	gxf = xf;
	gyf = yf;
	gxt = xt;
	gyt = yt;

	line (P(xf,yf),P(xt,yt));
	
	plot(fl, 0, 1, steps);
}

void
draw_toparc(double r, int steps)
{
	gr = r;

	arc (P(0,0),r, 0, M_PI);
	
	plot(fc, 0, 1, steps);
}

void
draw_dot(double x, double y)
{
	ddot (P(x,y));
	ddot (f(x,y));
}

int main()
{
  double slope;
  double c;
  double x;
  int i;

  picture(P(-1.3,-1.3), P(3.9,1.3), "3.0x1.5in");

  begin();
  //border();


  arrow(P(1.1,0.0),P(1.5,0.0));

  pen(Black(0.2));

  for (i = 1; i < 8; i++) {
	  draw_toparc(i/8.0,i*12);
  }

  for (i=1; i < 8; i++) {
	  draw_line (0.0,0,cos(i*M_PI/8.0),sin(i*M_PI/8.0),20);
  }

  pen(Black());

  draw_dot(0,sqrt(2)-1);

  bold();
  solid();
  arc(P(0,0),1,0,M_PI);
  line(P(-1,0),P(1,0));
  circle(P(2.6,0),1);
  plain();

  tikz_format();
  end();
}

